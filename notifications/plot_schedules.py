import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import numpy as np
from datetime import datetime
import math

from collections import defaultdict

from notifications.calculate_schedule_times import GreedyScheduleCalculator, SegmentedScheduleCalculator, ScheduleCalculatorBase
from notifications.schedule_configurations import *


def time_to_minutes(t: str) -> int:
    h, m = map(int, t.split(":"))
    return h * 60 + m


def minutes_to_time(m: int) -> str:
    h = (m // 60) % 24
    mm = m % 60
    return f"{h:02d}:{mm:02d}"

def plot_multiple_schedules(all_logs_list, schedule_calculators: list, output_pdf="meal_schedules.pdf"):
    """
    Plot histograms for multiple log arrays, 4 graphs per page, y-axis = total kcal.
    Each schedule calculator produces a line on the same graph.
    """
    plots_per_page = 4
    n_pages = math.ceil(len(all_logs_list) / plots_per_page)
    colors = ['red', 'blue', 'green', 'orange', 'purple', 'cyan', 'magenta', 'brown']

    with PdfPages(output_pdf) as pdf:
        for page_idx in range(n_pages):
            plt.figure(figsize=(12, 10))

            for i in range(plots_per_page):
                dataset_idx = page_idx * plots_per_page + i
                if dataset_idx >= len(all_logs_list):
                    break

                logs = all_logs_list[dataset_idx]

                # Aggregate kcal by bucket
                bucket_energy = defaultdict(int)
                for t, kcal in logs:
                    minutes = ScheduleCalculatorBase._time_to_minutes(t)
                    bucket = (minutes // BUCKET_MINUTE_SIZE) * BUCKET_MINUTE_SIZE
                    bucket_energy[bucket] += kcal

                buckets = sorted(bucket_energy.keys())
                values = [bucket_energy[b] for b in buckets]

                ax = plt.subplot(2, 2, i + 1)
                ax.bar(buckets, values, width=BUCKET_MINUTE_SIZE * 0.9, color='gray', edgecolor='black', alpha=0.6)

                # Plot schedule lines from each calculator
                for idx, calc in enumerate(schedule_calculators):
                    schedule = calc.calculate_schedule_times(logs)
                    schedule_minutes = [ScheduleCalculatorBase._time_to_minutes(t) for t in schedule]

                    for j, (s_min, s_time) in enumerate(zip(schedule_minutes, schedule)):
                        # Each vertical line gets a unique label for the legend
                        label = f"{type(calc).__name__}: {s_time}"
                        ax.axvline(s_min, color=colors[idx % len(colors)], linestyle='--', linewidth=2, label=label, alpha=0.75)

                # Remove duplicate labels in legend
                handles, labels = ax.get_legend_handles_labels()
                by_label = dict(zip(labels, handles))
                ax.legend(by_label.values(), by_label.keys(), fontsize=8)

                ax.set_xticks(np.arange(0, 1441, 180))  # every 3 hours
                ax.set_xticklabels([f"{h:02d}:00" for h in range(0, 25, 3)])
                ax.set_xlabel("Time of Day")
                ax.set_ylabel("Total kcal")
                ax.set_title(f"Dataset {dataset_idx + 1}")
                ax.legend(fontsize=8)

            plt.tight_layout()
            pdf.savefig()
            plt.close()


if __name__ == "__main__":
    # --- 8 example datasets ---

    logs1 = [
        ("08:05", 200), ("09:10", 150), ("10:25", 100),
        ("12:05", 250), ("14:15", 150), ("16:05", 100),
        ("18:10", 300), ("20:20", 200), ("22:15", 100),
        # Day 2
        ("08:30", 180), ("09:05", 130), ("10:45", 120),
        ("12:10", 260), ("14:05", 160), ("16:20", 90),
        ("18:30", 280), ("20:10", 220), ("22:00", 110),
        # Day 3
        ("08:15", 190), ("09:00", 140), ("10:50", 110),
        ("12:05", 240), ("14:20", 130), ("16:10", 120),
        ("18:05", 290), ("20:25", 210), ("22:10", 105),
        # Day 4
        ("08:00", 200), ("09:20", 150), ("10:40", 130),
        ("12:00", 250), ("14:10", 150), ("16:15", 100),
        ("18:15", 310), ("20:05", 200), ("22:20", 100),
        # Day 5
        ("08:10", 210), ("09:05", 140), ("10:35", 120),
        ("12:10", 260), ("14:15", 160), ("16:05", 90),
        ("18:20", 300), ("20:15", 220), ("22:10", 110)
    ]

    # 2. Structured three meals, very consistent
    logs2 = [
        ("07:30", 400), ("12:00", 600), ("18:30", 700),
        ("07:35", 420), ("12:05", 610), ("18:25", 690),
        ("07:25", 410), ("12:00", 620), ("18:35", 710),
        ("07:30", 400), ("12:00", 600), ("18:30", 700),
        ("07:32", 405), ("12:02", 615), ("18:28", 695)
    ]

    # 3. Skips lunch some days, big dinner
    logs3 = [
        ("08:00", 350), ("20:00", 900), ("20:30", 400),
        ("08:15", 300), ("19:50", 850),
        ("08:05", 320), ("20:10", 920),
        ("08:00", 310), ("20:00", 900),
        ("08:10", 330), ("19:55", 880)
    ]

    # 4. Breakfast-heavy, small other meals
    logs4 = [
        ("07:00", 600), ("07:30", 400), ("12:30", 200), ("18:00", 300),
        ("07:10", 610), ("07:25", 390), ("12:45", 210), ("18:10", 310),
        ("07:05", 620), ("07:35", 400), ("12:40", 200), ("18:05", 300),
        ("07:00", 600), ("07:30", 420), ("12:35", 220), ("18:00", 290),
        ("07:15", 610), ("07:20", 400), ("12:50", 210), ("18:15", 310)
    ]

    # 5. Lunch-focused, small breakfast/dinner
    logs5 = [
        ("07:30", 150), ("12:00", 700), ("12:30", 500), ("18:00", 200),
        ("07:40", 140), ("12:10", 720), ("12:35", 480), ("18:10", 220),
        ("07:35", 160), ("12:05", 710), ("12:40", 490), ("18:05", 210),
        ("07:30", 150), ("12:00", 700), ("12:30", 500), ("18:00", 200),
        ("07:25", 155), ("12:15", 730), ("12:45", 510), ("18:15", 215)
    ]

    # 6. Late-night eater
    logs6 = [
        ("08:00", 300), ("12:30", 400), ("23:00", 800), ("23:30", 500),
        ("08:10", 320), ("12:40", 410), ("23:10", 780), ("23:25", 520),
        ("08:05", 310), ("12:35", 420), ("23:05", 800), ("23:35", 510),
        ("08:00", 300), ("12:30", 400), ("23:00", 790), ("23:30", 500),
        ("08:15", 330), ("12:45", 430), ("23:15", 810), ("23:40", 520)
    ]

    # 7. Multiple small meals, somewhat consistent
    logs7 = [
        ("07:00", 200), ("09:00", 150), ("11:00", 150), ("13:00", 200),
        ("15:00", 150), ("17:00", 200), ("19:00", 250), ("21:00", 150),
        ("07:10", 190), ("09:15", 160), ("11:05", 140), ("13:10", 210),
        ("15:05", 150), ("17:10", 190), ("19:10", 260), ("21:05", 140),
        ("07:05", 200), ("09:00", 150), ("11:00", 150), ("13:00", 200),
        ("15:00", 150), ("17:00", 200), ("19:00", 250), ("21:00", 150),
        ("07:00", 205), ("09:10", 145), ("11:05", 155), ("13:05", 205),
        ("15:05", 160), ("17:05", 195), ("19:05", 255), ("21:10", 145),
        ("07:10", 200), ("09:00", 150), ("11:00", 150), ("13:00", 200),
        ("15:00", 150), ("17:00", 200), ("19:00", 250), ("21:00", 150)
    ]

    # 8. Irregular pattern, big lunch + afternoon snack
    logs8 = [
        ("07:45", 300), ("12:30", 800), ("15:30", 400), ("20:00", 200),
        ("07:50", 320), ("12:23", 733), ("15:35", 390), ("20:10", 220),
        ("07:40", 310), ("12:35", 750), ("15:40", 410), ("19:50", 210),
        ("07:55", 305), ("12:28", 720), ("15:32", 400), ("20:05", 200),
        ("07:45", 300), ("12:30", 800), ("15:30", 400), ("20:00", 200)
    ]

    # 9. Early riser, heavy breakfast, light meals rest of day
    logs9 = [
        ("06:30", 500), ("07:00", 300), ("12:00", 200), ("18:00", 250),
        ("06:35", 480), ("07:05", 320), ("12:05", 210), ("18:10", 240),
        ("06:40", 510), ("07:00", 310), ("12:00", 220), ("18:05", 260),
        ("06:30", 500), ("07:10", 300), ("12:10", 200), ("18:00", 250),
        ("06:45", 495), ("07:05", 315), ("12:05", 205), ("18:15", 245)
    ]

    # 10. Skipping breakfast, big lunch, small dinner
    logs10 = [
        ("12:00", 700), ("12:15", 650), ("18:30", 300),
        ("12:05", 720), ("12:20", 670), ("18:25", 310),
        ("12:00", 710), ("12:15", 660), ("18:35", 320),
        ("12:10", 705), ("12:25", 680), ("18:30", 315),
        ("12:05", 715), ("12:20", 675), ("18:40", 305)
    ]

    # 11. Night owl, eats mostly late evening and night
    logs11 = [
        ("10:00", 150), ("14:00", 200), ("22:00", 800), ("23:30", 400),
        ("10:10", 140), ("14:15", 190), ("22:10", 820), ("23:40", 390),
        ("10:05", 160), ("14:05", 210), ("22:05", 810), ("23:35", 420),
        ("10:00", 150), ("14:00", 200), ("22:00", 800), ("23:30", 400),
        ("10:15", 155), ("14:10", 205), ("22:15", 830), ("23:45", 410)
    ]

    # 12. Frequent small snacks throughout day, no real meals
    logs12 = [
        ("08:00", 150), ("09:30", 120), ("11:00", 130), ("12:30", 140),
        ("14:00", 160), ("15:30", 150), ("17:00", 140), ("18:30", 160),
        ("20:00", 150), ("21:30", 140),
        # repeated with slight variation for 5 days
        ("08:10", 145), ("09:25", 125), ("11:05", 135), ("12:35", 138),
        ("14:05", 155), ("15:35", 148), ("17:10", 142), ("18:25", 162),
        ("20:10", 152), ("21:35", 138),
        ("08:05", 148), ("09:35", 130), ("11:10", 132), ("12:40", 140),
        ("14:10", 158), ("15:40", 150), ("17:05", 145), ("18:35", 155),
        ("20:05", 148), ("21:30", 140),
        ("08:00", 150), ("09:30", 120), ("11:00", 130), ("12:30", 140),
        ("14:00", 160), ("15:30", 150), ("17:00", 140), ("18:30", 160),
        ("20:00", 150), ("21:30", 140),
        ("08:15", 152), ("09:35", 128), ("11:05", 135), ("12:35", 145),
        ("14:05", 160), ("15:35", 155), ("17:10", 142), ("18:25", 160),
        ("20:10", 150), ("21:35", 138)
    ]

    # 13. Consistent three meals, very structured
    logs13 = [
        ("07:00", 400), ("12:00", 600), ("18:00", 700),
        ("07:05", 410), ("12:05", 610), ("18:05", 710),
        ("07:00", 405), ("12:00", 605), ("18:00", 705),
        ("07:10", 400), ("12:10", 600), ("18:10", 700),
        ("07:05", 415), ("12:05", 615), ("18:05", 710)
    ]

    # 14. Skipping breakfast & dinner, big lunch only
    logs14 = [
        ("12:00", 800), ("12:15", 750),
        ("12:05", 810), ("12:20", 770),
        ("12:10", 790), ("12:25", 760),
        ("12:00", 800), ("12:15", 750),
        ("12:05", 805), ("12:20", 765)
    ]

    # 15. Irregular snacker: big swings, sometimes skips meals
    logs15 = [
        ("08:30", 200), ("12:00", 600), ("18:00", 250),
        ("09:00", 100), ("13:00", 700), ("20:00", 300),
        ("07:45", 250), ("12:15", 650), ("18:30", 200),
        ("08:10", 180), ("12:05", 620), ("19:50", 400),
        ("08:00", 220), ("12:10", 600), ("18:10", 250)
    ]

    # 16. Athlete-style: 5 smaller meals, high protein, consistent
    logs16 = [
        ("06:30", 350), ("09:00", 400), ("12:00", 450), ("15:00", 400), ("18:00", 500),
        ("06:35", 360), ("09:05", 420), ("12:05", 455), ("15:05", 410), ("18:05", 510),
        ("06:30", 350), ("09:00", 400), ("12:00", 450), ("15:00", 400), ("18:00", 500),
        ("06:40", 355), ("09:10", 415), ("12:10", 460), ("15:10", 405), ("18:10", 505),
        ("06:30", 360), ("09:05", 420), ("12:05", 455), ("15:05", 410), ("18:05", 510)
    ]

    # 17. Constant snacker: small meals every 1-2 hours, very consistent
    log17 = [
                ("06:30", 100), ("07:30", 100), ("08:30", 100), ("09:30", 100), ("10:30", 100),
                ("11:30", 100), ("12:30", 100), ("13:30", 100), ("14:30", 100), ("15:30", 100),
                ("16:30", 100), ("17:30", 100), ("18:30", 100), ("19:30", 100), ("20:30", 100),
            ] * 5

    # 18. Highly inconsistent: meal times and sizes vary wildly each day
    log18 = [
        ("07:00", 400), ("12:30", 600), ("18:00", 500),
        ("08:30", 300), ("13:00", 800), ("20:15", 400),
        ("06:45", 200), ("12:00", 700), ("19:30", 600),
        ("07:15", 500), ("11:45", 400), ("18:45", 300),
        ("08:00", 350), ("12:15", 650), ("20:00", 450)
    ]

    # 19. Only breakfast, multiple small snacks, no lunch or dinner
    log19 = [
                ("07:00", 400), ("08:30", 150), ("10:00", 150), ("11:30", 150),
            ] * 5

    # 20. Alternating fast and feast days
    log20 = [
        # Day 1 - light
        ("08:00", 200), ("12:00", 300), ("18:00", 250),
        # Day 2 - heavy
        ("07:30", 600), ("12:30", 800), ("18:30", 700),
        # Day 3 - light
        ("08:15", 250), ("12:15", 350), ("18:15", 300),
        # Day 4 - heavy
        ("07:45", 650), ("12:45", 850), ("18:45", 720),
        # Day 5 - medium
        ("08:00", 400), ("12:30", 600), ("18:00", 500)
    ]

    # 21. Extremely late-night eater, almost skips day meals
    log21 = [
        ("22:00", 700), ("23:00", 600), ("23:30", 500),
        ("22:15", 720), ("23:05", 580), ("23:35", 510),
        ("22:10", 710), ("23:10", 600), ("23:40", 490),
        ("22:05", 700), ("23:00", 620), ("23:30", 500),
        ("22:15", 730), ("23:05", 610), ("23:35", 520)
    ]

    # 22. Only two large meals: breakfast and dinner, nothing else
    log22 = [
        ("07:00", 600), ("18:00", 800),
        ("07:10", 620), ("18:10", 810),
        ("07:05", 610), ("18:05", 790),
        ("07:00", 600), ("18:00", 800),
        ("07:15", 615), ("18:15", 805)
    ]

    # 23. Very irregular snacker: sometimes eats one meal, sometimes many small ones
    log23 = [
        ("08:00", 300), ("12:00", 500), ("15:00", 200),
        ("09:00", 150), ("11:00", 150), ("14:00", 150), ("18:00", 400),
        ("07:30", 200), ("13:00", 600), ("20:00", 300),
        ("08:15", 350), ("12:30", 450), ("17:00", 250),
        ("07:45", 200), ("12:15", 700), ("15:30", 300), ("19:00", 400)
    ]

    # 24. Athlete: 6 small meals, very consistent across days
    log24 = [
        ("06:00", 300), ("09:00", 350), ("11:30", 300), ("14:00", 350), ("17:00", 400), ("20:00", 450),
        ("06:05", 310), ("09:05", 340), ("11:35", 310), ("14:05", 355), ("17:05", 395), ("20:05", 460),
        ("06:00", 305), ("09:00", 345), ("11:30", 300), ("14:00", 350), ("17:00", 400), ("20:00", 450),
        ("06:10", 315), ("09:10", 350), ("11:40", 320), ("14:10", 360), ("17:10", 410), ("20:10", 455),
        ("06:00", 300), ("09:00", 350), ("11:30", 300), ("14:00", 350), ("17:00", 400), ("20:00", 450)
    ]

    plot_multiple_schedules([logs1, logs2, logs3, logs4, logs5, logs6, logs7, logs8,
                             logs9, logs10, logs11, logs12, logs13, logs14, logs15, logs16,
                             log17, log18, log19, log20, log21, log22, log23, log24],
                            [GreedyScheduleCalculator(), SegmentedScheduleCalculator()],
                            "unique_meal_patterns.pdf")
    print("Saved PDF with 8 unique meal pattern graphs: unique_meal_patterns.pdf")
